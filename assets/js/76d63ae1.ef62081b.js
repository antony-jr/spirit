"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4718],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),f=l(n),m=i,d=f["".concat(s,".").concat(m)]||f[m]||u[m]||o;return n?r.createElement(d,p(p({ref:t},c),{},{components:n})):r.createElement(d,p({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,p=new Array(o);p[0]=f;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:i,p[1]=a;for(var l=2;l<o;l++)p[l]=n[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5659:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:2},p="API Specification",a={unversionedId:"rest-api/api",id:"rest-api/api",title:"API Specification",description:"Down below are the different API calls you can make to spirit to do",source:"@site/docs/rest-api/api.md",sourceDirName:"rest-api",slug:"/rest-api/api",permalink:"/spirit/docs/rest-api/api",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Get API Endpoint.",permalink:"/spirit/docs/rest-api/address"},next:{title:"Spirit Addons",permalink:"/spirit/docs/programs"}},s={},l=[{value:"Action",id:"action",level:2},{value:"Property",id:"property",level:2}],c={toc:l};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"api-specification"},"API Specification"),(0,i.kt)("p",null,"Down below are the different API calls you can make to spirit to do\nsome supported operations. You ",(0,i.kt)("strong",{parentName:"p"},"should")," obtain the API endpoint first,\nwe will assume this url as ",(0,i.kt)("inlineCode",{parentName:"p"},"API_URL"),"."),(0,i.kt)("h2",{id:"action"},"Action"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"To set or reset, you should do a POST request, use GET request to get the list of\nall actions available in the Spirit File.")),(0,i.kt)("p",null,"Action of the current loaded Spirit File can be modified by using this API endpoint,\nthe endpoint can be accessed by appending ",(0,i.kt)("strong",{parentName:"p"},"/action")," to the ",(0,i.kt)("strong",{parentName:"p"},"API_URL"),". The request body should\nhave json with the following format,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'{\n   "opt": "set", // or \'unset\'\n   "action": "some_action" // not need if opt = \'unset\'\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'#!/usr/bin/env python3\nimport os\nimport json\nimport requests\nimport tempfile\n\ndef get_spirit_api():\n    port_file = tempfile.gettempdir() + "/com.github.antony-jr.spirit"\n    with open(port_file, "r") as fp:\n        port = fp.read()\n        p = None\n        try:\n           p = int(str(port))\n        except:\n           p = -1\n\n        if p < 0:\n            return None\n        return "http://127.1:" + str(p) + "/spirit/v1/"\n\napi_url = get_spirit_api()\nif api_url is None:\n    os.exit(-1)\n\nload = {\n    "opt": "set",\n    "action": "error",\n}\n\nresp = requests.post(api_url + "action", json.dumps(load))\nprint(resp.content)\n')),(0,i.kt)("p",null,"To get list of all actions available in the Spirit File,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'import json\nimport requests\nimport tempfile\n\ndef get_spirit_api():\n    port_file = tempfile.gettempdir() + "/com.github.antony-jr.spirit"\n    with open(port_file, "r") as fp:\n        port = fp.read()\n        p = None\n        try:\n           p = int(str(port))\n        except:\n           p = -1\n\n        if p < 0:\n            return None\n        return "http://127.1:" + str(p) + "/spirit/v1/"\n\napi_url = get_spirit_api()\nif api_url is None:\n    os.exit(-1)\n\nresp = requests.get(api_url + "action")\nprint(resp.content)\n')),(0,i.kt)("h2",{id:"property"},"Property"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"HTTP GET request to get current properties of a Spirit File's current action, HTTP POST request to\nupdate them.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," API_URL/property\n")),(0,i.kt)("p",null,"The below api call changes the position of the Spirit currently shown."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'#!/usr/bin/env python3\nimport os\nimport requests\nimport tempfile\n\ndef get_spirit_api():\n    port_file = tempfile.gettempdir() + "/com.github.antony-jr.spirit"\n    with open(port_file, "r") as fp:\n        port = fp.read()\n        p = None\n        try:\n           p = int(str(port))\n        except:\n           p = -1\n\n        if p < 0:\n            return None\n        return "http://127.1:" + str(p) + "/spirit/v1/"\n\napi_url = get_spirit_api()\nif api_url is None:\n    os.exit(-1)\n\nresp = requests.post(api_url + "property", \'{"position": "topLeft"}\')\nprint(resp.content)\n')),(0,i.kt)("p",null,"The following are the possible properties that can be updated,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'{\n   "speed": 100, // 100 means 100%\n   "scale": 40, // 40 means 40% of the original size\n   "topXOffset": 0\n   "topYOffset": 0,\n   "bottomXOffset": 0,\n   "bottomYOffset": 0, \n   "position": "topLeft" // topRight, bottomLeft, bottomRight\n}\n')))}u.isMDXComponent=!0}}]);