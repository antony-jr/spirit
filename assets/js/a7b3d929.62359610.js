"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3234],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(r),d=i,m=u["".concat(s,".").concat(d)]||u[d]||f[d]||o;return r?n.createElement(m,a(a({ref:t},l),{},{components:r})):n.createElement(m,a({ref:t},l))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:i,a[1]=p;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1296:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const o={sidebar_position:1},a="Get API Endpoint.",p={unversionedId:"rest-api/address",id:"rest-api/address",title:"Get API Endpoint.",description:"Spirit REST API is hosted at localhost however the port is different on each initialization of",source:"@site/docs/rest-api/address.md",sourceDirName:"rest-api",slug:"/rest-api/address",permalink:"/spirit/docs/rest-api/address",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Spirit REST API",permalink:"/spirit/docs/category/spirit-rest-api"},next:{title:"API Specification",permalink:"/spirit/docs/rest-api/api"}},s={},c=[],l={toc:c},u="wrapper";function f(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"get-api-endpoint"},"Get API Endpoint."),(0,i.kt)("p",null,"Spirit REST API is hosted at ",(0,i.kt)("strong",{parentName:"p"},"localhost")," however the port is different on each initialization of\nSpirit, one has to get this port number to get the API Endpoint. The port number is stored in a\nfile stored in the Temporary directory of the operating system, this port can be inactive so the\nprogrammer has to check if the port is actually hosting Spirit REST API."),(0,i.kt)("p",null,'The following Python functions gets the API endpoint and request information about the current loaded\n"Spirit File".'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'#!/usr/bin/env python3\nimport os\nimport requests\nimport tempfile\n\ndef get_spirit_api():\n    port_file = tempfile.gettempdir() + "/com.github.antony-jr.spirit"\n    with open(port_file, "r") as fp:\n        port = fp.read()\n        p = None\n        try:\n           p = int(str(port))\n        except:\n           p = -1\n\n        if p < 0:\n            return None\n        return "http://127.1:" + str(p) + "/spirit/v1/"\n\napi_url = get_spirit_api()\nif api_url is None:\n    os.exit(-1)\n\nresp = requests.get(api_url + "load")\n\n# Should also check if the request was successful,\n# since this file might be from a crash.\nprint(resp.content)\n')))}f.isMDXComponent=!0}}]);